{"version":3,"sources":["Nav/Nav.js","AboutMe/AboutMe.js","Models/World3test.js","Scene/Scene.js","Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","motion","nav","className","showNav","animate","right","top","height","width","borderRadius","onClick","toggleShowNav","href","AboutMe","id","h1","Model","group","useRef","useGLTF","nodes","materials","ref","dispose","geometry","bridge","material","position","rotation","Math","PI","scale","Tree","castShadow","Tree001","World","Material","receiveShadow","Scene","React","useState","updateState","forceUpdate","useCallback","orbitRef","object","x","y","z","lightRef","div","showProjects","transition","duration","type","console","log","current","Canvas","camera","fov","near","far","style","shadows","intensity","OrbitControls","minDistance","maxDistance","fallback","preload","softShadows","Footer","toggleShowProjects","App","setShowNav","setShowProjects","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aa72299.chunk.js","sourcesContent":["import './Nav.css'\nimport { motion } from 'framer-motion'\n\nexport default function Nav(props){\n    return (\n        <motion.nav className={props.showNav?\"show-nav\":\"\"}\n        animate={props.showNav?{\n            right: 0,\n            top: 0,\n            height: '100vh',\n            width: '30vw',\n            borderRadius: 0\n        }:{\n            right: '2.5vh',\n            top: '2.5vh',\n            height: '10vh',\n            width: '10vh',\n            borderRadius: '100vh'\n        }\n        }>\n            <div className=\"burger-wrapper\">\n                <div className={props.showNav? \"burger-container  show-nav\":\"burger-container\"} \n                onClick={props.toggleShowNav}>\n                    <div className=\"burger-1\"></div>\n                    <div className=\"burger-2\"></div>\n                    <div className=\"burger-3\"></div>\n                </div>\n            </div>\n            <ul>\n                <li><a href=\"#about-me\">About Me</a></li>\n                <li><a href=\"#projects\">Projects</a></li>\n            </ul>\n        </motion.nav>\n    )\n}","import './AboutMe.css'\nimport { motion } from 'framer-motion'\n\nexport default function AboutMe(){\n    return (\n        <div className=\"about-me\" id=\"about-me\">\n            <motion.h1>About me</motion.h1>\n        </div>\n    )\n}","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/portfoliotest2/world3test.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.bridge.geometry}\n        material={materials['Material.004']}\n        position={[0.05, -0.36, -0.02]}\n        rotation={[0, 0, -Math.PI]}\n        scale={[0.55, 0.15, 0.15]}\n        \n      />\n      <mesh\n        geometry={nodes.Tree.geometry}\n        material={materials['Material.003']}\n        position={[0.12, 0.46, -0.1]}\n        scale={[0.33, 0.33, 0.33]}\n        castShadow\n      />\n      <mesh\n        geometry={nodes.Tree001.geometry}\n        material={materials['Material.002']}\n        position={[-0.19, 0.46, 0.07]}\n        scale={[0.33, 0.33, 0.33]}\n        castShadow\n      />\n      <mesh geometry={nodes.World.geometry} material={materials.Material} scale={[0.33, 0.33, 0.33]} receiveShadow />\n    </group>\n  )\n}\n\nuseGLTF.preload('/portfoliotest2/world3test.glb')\n","import './Scene.css'\nimport React, { Suspense, useRef } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { OrbitControls, softShadows, CubeCamera } from '@react-three/drei/core'\n// import BackDrop from '../Models/Backdrop'\nimport { motion } from 'framer-motion'\nimport World3test from '../Models/World3test'\n\nsoftShadows();\n\nexport default function Scene(props) {\n\n    const [, updateState] = React.useState();\n    const forceUpdate = React.useCallback(() => updateState({}), []);\n\n    const orbitRef = useRef({object:{position:{x:1,y:1,z:1}}})\n    const lightRef = useRef()\n\n  return (\n    <motion.div className=\"scene\" \n      animate={props.showProjects? {y: '-100vh'}:{y: 0}} \n      transition={{duration: 0.05, type: 'tween'}}>\n        <button onClick={()=>{\n              console.log(orbitRef.current.object.position)\n              console.log(lightRef.current.position)\n              console.log(Canvas)\n              forceUpdate()\n          }}>Click</button>\n      <Canvas \n        camera={{ fov: 75, near: 0.1, far: 1000, position: [0, 0, 1.5] }} \n        style={{height:'100vh'}} id=\"projects\" shadows>\n          \n          <pointLight \n            intensity={0.3}     \n            castShadow\n            motion\n            ref={lightRef}\n            position={[orbitRef.current.object.position.x, orbitRef.current.object.position.y, orbitRef.current.object.position.z]}\n          />\n        <OrbitControls minDistance={1} maxDistance={3} ref={orbitRef}/>\n        \n        {/* <Backdrop/> */}\n        <ambientLight intensity={0.1}></ambientLight>\n        <Suspense fallback={<h1>Loading Profile...</h1>}>\n          <World3test/>\n        </Suspense>\n      </Canvas>\n    </motion.div>\n    \n  )\n}","import './Footer.css'\nimport { motion } from 'framer-motion'\n\nexport default function Footer(props){\n    return (\n        <footer onClick={props.toggleShowProjects}>\n            <motion.div className=\"footer-wrapper\"             \n            animate={props.showProjects? {y: [0, 300]}:{y:[300, 0]}}\n            transition={{duration:0.5}}>\n                <h2>See Projects</h2>\n            </motion.div>\n            <motion.div className=\"footer-wrapper\" \n            animate={props.showProjects? {y: [300, 0]}:{y:[0, 300]}}\n            transition={{duration:0.5}}>\n                <h2>Hide Projects</h2>\n            </motion.div>\n        </footer>\n    )\n}","import './App.css';\nimport { useState } from 'react'\nimport Nav from './Nav/Nav'\nimport AboutMe from './AboutMe/AboutMe'\nimport Scene from './Scene/Scene'\nimport Footer from './Footer/Footer'\n\nexport default function App(){\n\n  const [showNav, setShowNav] = useState(false)\n  const [showProjects, setShowProjects] = useState(false)\n\n  function toggleShowNav(){\n    setShowNav(prev => !prev)\n  }\n\n  function toggleShowProjects(){\n    setShowProjects(prev => !prev)\n  }\n\n  return (\n    <div>\n      <Nav showNav={showNav} toggleShowNav={toggleShowNav}/>\n      <AboutMe/>\n      <Scene showProjects={showProjects}/>\n      <Footer showProjects={showProjects} toggleShowProjects={toggleShowProjects}/>\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}